package com.amongus.bot.commands;

import com.amongus.bot.core.AmongUsBot;
import com.amongus.bot.core.SessionManager;
import com.amongus.bot.game.lobby.GameLobby;
import com.amongus.bot.models.Config;
import com.amongus.bot.models.Player;
import com.amongus.bot.utils.SecurityManager;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.User;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

/**
 * Command that creates a new game lobby.
 */
public class CreateCommand extends BaseCommand {
    private static final Logger log = LoggerFactory.getLogger(CreateCommand.class);
    private final SecurityManager securityManager;

    public CreateCommand(AmongUsBot bot, SessionManager sessionManager, SecurityManager securityManager) {
        super(bot, sessionManager);
        this.securityManager = securityManager;
    }

    @Override
    public String getName() {
        return "create";
    }

    @Override
    public String getDescription() {
        return "Creates a new game lobby.";
    }

    @Override
    public void execute(Message message, String args) {
        String chatId = message.getChatId().toString();
        User telegramUser = message.getFrom();
        Player player = Player.fromTelegramUser(telegramUser);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∏–≥—Ä–æ–∫ —É–∂–µ –≤ –ª–æ–±–±–∏
        Optional<GameLobby> existingLobby = sessionManager.getLobbyForPlayer(player.getUserId());
        if (existingLobby.isPresent()) {
            SendMessage sendMessage = new SendMessage();
            sendMessage.setChatId(chatId);
            sendMessage.setText("‚ùå –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ª–æ–±–±–∏. –ü–æ–∫–∏–Ω—å—Ç–µ —Ç–µ–∫—É—â–µ–µ –ª–æ–±–±–∏ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /leave, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ.");
            execute(sendMessage);
            return;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–∫–∞
        player.updateActivity();

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ª–æ–±–±–∏
        String lobbyCode = sessionManager.createLobby(player);

        // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ì–æ—Ç–æ–≤" –∏ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        List<InlineKeyboardButton> readyRow = new ArrayList<>();
        InlineKeyboardButton readyButton = new InlineKeyboardButton();
        readyButton.setText("–ì–æ—Ç–æ–≤");
        readyButton.setCallbackData("ready");
        readyRow.add(readyButton);
        keyboard.add(readyRow);

        List<InlineKeyboardButton> settingsRow = new ArrayList<>();
        InlineKeyboardButton settingsButton = new InlineKeyboardButton();
        settingsButton.setText("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏");
        settingsButton.setCallbackData("settings");
        settingsRow.add(settingsButton);
        keyboard.add(settingsRow);

        markup.setKeyboard(keyboard);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText("üéÆ –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤–æ–µ –ª–æ–±–±–∏!\n\n" +
                "–ö–æ–¥ –ª–æ–±–±–∏: *" + lobbyCode + "*\n\n" +
                "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º –∫–æ–¥–æ–º —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏, —á—Ç–æ–±—ã –æ–Ω–∏ –º–æ–≥–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã:\n" +
                "/join " + lobbyCode + "\n\n" +
                "–ö–æ–≥–¥–∞ –≤—Å–µ –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã, –∏–≥—Ä–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.");
        sendMessage.enableMarkdown(true);
        sendMessage.setReplyMarkup(markup);
        execute(sendMessage);

        // –û–±–Ω–æ–≤–ª—è–µ–º chat ID –∏–≥—Ä–æ–∫–∞ –≤ —Å–µ—Å—Å–∏–∏
        sessionManager.updatePlayerChatId(player.getUserId(), chatId);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –≤–ª–∞–¥–µ–ª—å—Ü—É –ª–æ–±–±–∏
        Optional<GameLobby> lobbyOpt = sessionManager.getLobbyByCode(lobbyCode);
        if (lobbyOpt.isPresent()) {
            GameLobby lobby = lobbyOpt.get();

            // –°—Ç—Ä–æ–∏–º —Ç–µ–∫—Å—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –∏–≥—Ä–æ–∫–æ–≤
            StringBuilder statusSB = new StringBuilder();
            statusSB.append("üë• *–ò–≥—Ä–æ–∫–∏* (").append(lobby.getPlayers().size()).append("/").append(Config.MAX_PLAYERS).append("):\n");

            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞ (–æ–Ω –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤ –ª–æ–±–±–∏ –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ)
            for (Player p : lobby.getPlayers()) {
                String readyStatus = p.isReady() ? "‚úÖ" : "‚¨ú";
                String ownerLabel = lobby.isOwner(p.getUserId()) ? " üëë" : "";
                statusSB.append(readyStatus).append(" ")
                        .append(p.getDisplayName())
                        .append(ownerLabel)
                        .append("\n");
            }

            // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
            InlineKeyboardMarkup statusMarkup = new InlineKeyboardMarkup();
            List<List<InlineKeyboardButton>> statusKeyboard = new ArrayList<>();

            // –ö–Ω–æ–ø–∫–∞ "–ì–æ—Ç–æ–≤"
            List<InlineKeyboardButton> statusReadyRow = new ArrayList<>();
            InlineKeyboardButton statusReadyButton = new InlineKeyboardButton();
            statusReadyButton.setText("–ì–æ—Ç–æ–≤");
            statusReadyButton.setCallbackData("ready");
            statusReadyRow.add(statusReadyButton);
            statusKeyboard.add(statusReadyRow);

            // –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞
            List<InlineKeyboardButton> statusSettingsRow = new ArrayList<>();
            InlineKeyboardButton statusSettingsButton = new InlineKeyboardButton();
            statusSettingsButton.setText("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏");
            statusSettingsButton.setCallbackData("settings");
            statusSettingsRow.add(statusSettingsButton);
            statusKeyboard.add(statusSettingsRow);

            statusMarkup.setKeyboard(statusKeyboard);

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID
            Integer statusMessageId = bot.sendMessageWithReturnIdSafe(chatId, statusSB.toString(), statusMarkup);
            if (statusMessageId != null) {
                lobby.setStatusMessageId(player.getUserId(), statusMessageId);
            }
        }

        // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ª–æ–±–±–∏
        log.info("–°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤–æ–µ –ª–æ–±–±–∏ —Å –∫–æ–¥–æ–º {} –∏–≥—Ä–æ–∫–æ–º {}", lobbyCode, player.getDisplayName());
    }
}
